% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model_performance.R
\name{resamplePerplexity}
\alias{resamplePerplexity}
\title{Calculate and visualize perplexity of all models in a celda_list, with count resampling}
\usage{
resamplePerplexity(counts, celda.list, resample = 5, seed = 12345)
}
\arguments{
\item{counts}{Integer matrix. Rows represent features and columns represent cells. This matrix should be the same as the one used to generate `celda.mod`.}

\item{celda.list}{Object of class 'celda_list'.}

\item{resample}{Integer. The number of times to resample the counts matrix for evaluating perplexity. Default 5.}

\item{seed}{Parameter to set.seed() for random number generation. Default 12345.}
}
\value{
celda_list. Returns the provided `celda.list` with a `perplexity` property, detailing the perplexity of all K/L combinations that appeared in the celda_list's models.
}
\description{
Calculates the erplexity of each model's cluster assignments given the provided count matrix,
as well as resamplings of that count matrix, providing a distribution of perplexities and a better sense of the 
quality of a given K/L choice.
}
\examples{
## Simulate a small dataset with 5 cell clusters and 10 feature modules
celda.sim = simulateCells(model="celda_CG", K=5, L=10, G=100)

## Run various combinations of parameters with 'celdaGridSearch'
cgs = celdaGridSearch(celda.sim$counts, model="celda_CG", params.test=list(K=4:6, L=9:11), 
                      params.fixed=list(sample.label=celda.sim$sample.label),
                      best.only=TRUE, nchains=1)
cgs = resamplePerplexity(celda.sim$counts, cgs)
plotGridSearchPerplexity(cgs)
}
