% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/celda_C.R
\name{celda_C}
\alias{celda_C}
\title{celda Cell clustering function}
\usage{
celda_C(counts, sample.label = NULL, K, alpha = 1, beta = 1,
  max.iter = 25, seed = 12345, best = TRUE, z.split.on.iter = 3,
  z.num.splits = 3, thread = 1, save.history = FALSE, save.prob = FALSE,
  ...)
}
\arguments{
\item{counts}{A numeric count matrix}

\item{sample.label}{A vector indicating the sample for each cell (column) in the count matrix}

\item{K}{An integer or range of integers indicating the desired number of cell clusters (for celda_C / celda_CG models)}

\item{alpha}{Non-zero concentration parameter for sample Dirichlet distribution}

\item{beta}{Non-zero concentration parameter for gene Dirichlet distribution}

\item{max.iter}{Maximum iterations of Gibbs sampling to perform. Defaults to 25}

\item{seed}{Parameter to set.seed() for random number generation}

\item{best}{Whether to return the cluster assignment with the highest log-likelihood. Defaults to TRUE. Returns last generated cluster assignment when FALSE.}

\item{z.split.on.iter}{On every "z.split.on.iter" iteration, a heuristic will be applied using hierarchical clustering to determine if a cell cluster should be merged with another cell cluster and a third cell cluster should be split into two clusters. This helps avoid local optimum during the initialization.}

\item{z.num.splits}{Maximum number of times to perform the heuristic described in “z.split.on.iter”.}

\item{thread}{The thread index, used for logging purposes}

\item{save.history}{Logical; whether to return the history of cluster assignments. Defaults to FALSE}

\item{save.prob}{Logical; whether to return the history of cluster assignment probabilities. Defaults to FALSE}
}
\description{
celda Cell clustering function
}
