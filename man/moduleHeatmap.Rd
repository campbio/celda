% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/StateHeatmap.R
\name{moduleHeatmap}
\alias{moduleHeatmap}
\title{Transcriptional state heatmap}
\usage{
moduleHeatmap(counts, celda.mod, feature.module = 1, top.cells = NULL,
  top.features = NULL, normalize = TRUE, scale.row = scale,
  show_featurenames = TRUE)
}
\arguments{
\item{counts}{Integer matrix. Rows represent features and columns represent cells. This matrix should be the same as the one used to generate `celda.mod`.}

\item{celda.mod}{Celda object of class "celda_G" or "celda_CG".}

\item{feature.module}{Integer. The feature module to display.}

\item{top.cells}{Integer. Number of cells with the highest and lowest probabilities for this module to plot. For example, if `top.cells` = 50, the 50 cells with the lowest probability and the 50 cells with the highest probability for that feature module will be plotted. If NULL, all cells will be plotted. Default NULL.}

\item{top.features}{Integer. Plot `top.features` with the highest probability in the feature module. If NULL, plot all features in the module. Default NULL.}

\item{normalize}{Logical. Whether to normalize the columns of `counts`. Default TRUE.}

\item{scale.row}{Character. Which function to use to scale each individual row. Set to NULL to disable. Occurs after normalization and log transformation. 'scale' will Z-score transform each row. Default 'scale'.}

\item{show_featurenames}{Logical. Specifies if feature names should be shown. Default TRUE.}
}
\description{
Draws a heatmap focusing on a transcriptional state. Both cells and genes are sorted by 
   their proportions of counts in a given transcriptional state. Allows for nice visualization of 
   co-expression of those genes grouped into transcriptional states by Celda.
}
\examples{
celda.sim = simulateCells("celda_CG")
celda.mod = celda_CG(celda.sim$counts, K=celda.sim$K, L=celda.sim$L,
                     nchains=1, max.iter=1)
moduleHeatmap(celda.sim$counts, celda.mod)
}
