% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/celda_G.R
\name{featureModuleLookup.celda_G}
\alias{featureModuleLookup.celda_G}
\title{Obtain the gene module of a gene of interest}
\usage{
<<<<<<< HEAD
\method{featureModuleLookup}{celda_G}(counts, celda.mod, feature)
=======
\method{featureModuleLookup}{celda_G}(counts, celda.mod, feature,
  exact.match = TRUE)
>>>>>>> upstream-devel
}
\arguments{
\item{counts}{Integer matrix. Rows represent features and columns represent cells. This matrix should be the same as the one used to generate `celda.mod`.}

\item{celda.mod}{Model of class "celda_G" or "celda_CG".}

\item{feature}{Character vector. Identify feature modules for the specified feature names.}
<<<<<<< HEAD
=======

\item{exact.match}{Logical. Whether to look for exact match of the gene name within counts matrix. Default TRUE.}
}
\value{
List. Each entry corresponds to the feature module determined for the provided features
>>>>>>> upstream-devel
}
\description{
This function will output the gene module of a specific gene(s) from a celda model
}
<<<<<<< HEAD
=======
\examples{
celda.sim = simulateCells("celda_G")
celda.mod = celda_G(celda.sim$counts, L=celda.sim$L)
module = featureModuleLookup(celda.sim$counts, celda.mod, c("Gene_1", "Gene_XXX"))
}
>>>>>>> upstream-devel
