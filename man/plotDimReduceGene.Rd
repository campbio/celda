% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_dr.R
\name{plotDimReduceGene}
\alias{plotDimReduceGene}
\title{Create a scatterplot for each row of a normalized gene expression matrix where x and y axis are from a data dimensionality reduction tool.}
\usage{
plotDimReduceGene(dim1, dim2, counts, features, normalize = TRUE,
  exact.match = TRUE, trim = c(-2, 2), size = 1,
  xlab = "Dimension_1", ylab = "Dimension_2", color_low = "grey",
  color_mid = NULL, color_high = "blue")
}
\arguments{
\item{dim1}{Numeric vector. First dimension from data dimensionality reduction output.}

\item{dim2}{Numeric vector. Second dimension from data dimensionality reduction output.}

\item{counts}{Integer matrix. Rows represent features and columns represent cells.}

\item{features}{Character vector. Uses these genes for plotting.}

\item{normalize}{Logical. Whether to normalize the columns of `counts`. Default TRUE.}

\item{exact.match}{Logical. Whether to look for exact match of the gene name within counts matrix. Default TRUE.}

\item{trim}{Numeric vector. Vector of length two that specifies the lower and upper bounds for the data. This threshold is applied after row scaling. Set to NULL to disable. Default c(-2,2).}

\item{size}{Numeric. Sets size of point on plot. Default 1.}

\item{xlab}{Character vector. Label for the x-axis. Default "Dimension_1".}

\item{ylab}{Character vector. Label for the y-axis. Default "Dimension_2".}

\item{color_low}{Character. A color available from `colors()`. The color will be used to signify the lowest values on the scale. Default 'grey'.}

\item{color_mid}{Character. A color available from `colors()`. The color will be used to signify the midpoint on the scale.}

\item{color_high}{Character. A color available from `colors()`. The color will be used to signify the highest values on the scale. Default 'blue'.}
}
\description{
Create a scatterplot for each row of a normalized gene expression matrix where x and y axis are from a data dimensionality reduction tool.
}
\examples{
\donttest{
sim.res = simulateCells(model="celda_CG", K = 5, L = 5)
celda_cg <- celda_CG(counts = sim.res$counts, K = 5, L = 5)
celda.tsne <- celdaTsne(counts = sim.res$counts, celda.mod = celda_cg)
plotDimReduceGene(dim1 = celda.tsne[,1],dim2 = celda.tsne[,2],
                  counts = sim.res$counts,features = c("Gene_99"), exact.match = TRUE)
}
}
