% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/celda_CG.R
\name{celda_CG}
\alias{celda_CG}
\title{celda Cell and Gene Clustering Model}
\usage{
celda_CG(counts, sample.label = NULL, K, L, alpha = 1, beta = 1,
  delta = 1, gamma = 1, algorithm = c("EM", "Gibbs"),
  stop.iter = 10, max.iter = 200, split.on.iter = 10,
  split.on.last = TRUE, seed = 12345, nchains = 3,
  count.checksum = NULL, z.init = NULL, y.init = NULL,
  logfile = NULL, verbose = TRUE)
}
\arguments{
\item{counts}{Integer matrix. Rows represent features and columns represent cells.}

\item{sample.label}{Vector or factor. Denotes the sample label for each cell (column) in the count matrix.}

\item{K}{Integer. Number of cell populations.}

\item{L}{Integer. Number of feature modules.}

\item{alpha}{Numeric. Concentration parameter for Theta. Adds a pseudocount to each cell population in each sample. Default 1.}

\item{beta}{Numeric. Concentration parameter for Phi. Adds a pseudocount to each feature module in each cell population. Default 1.}

\item{delta}{Numeric. Concentration parameter for Psi. Adds a pseudocount to each feature in each module. Default 1.}

\item{gamma}{Numeric. Concentration parameter for Eta. Adds a pseudocount to the number of features in each module. Default 1.}

\item{algorithm}{String. Algorithm to use for clustering cell subpopulations. One of 'EM' or 'Gibbs'. Default 'EM'.}

\item{stop.iter}{Integer. Number of iterations without improvement in the log likelihood to stop inference. Default 10.}

\item{max.iter}{Integer. Maximum number of iterations of Gibbs sampling to perform. Default 200.}

\item{split.on.iter}{Integer. On every `split.on.iter` iteration, a heuristic will be applied to determine if a cell population or feature module should be reassigned and another cell population or feature module should be split into two clusters. To disable splitting, set to -1. Default 10.}

\item{split.on.last}{Integer. After the the chain has converged, according to `stop.iter`, a heuristic will be applied to determine if a cell population or feature module should be reassigned and another cell population or feature module should be split into two clusters. If a split occurs, then 'stop.iter' will be reset. Default TRUE.}

\item{seed}{Integer. Passed to set.seed(). Default 12345.}

\item{nchains}{Integer. Number of random cluster initializations. Default 1.}

\item{count.checksum}{Character. An MD5 checksum for the `counts` matrix. Default NULL.}

\item{z.init}{Integer vector. Sets initial starting values of z. If NULL, starting values for each cell will be randomly sampled from 1:K. Default NULL.}

\item{y.init}{Integer vector. Sets initial starting values of y. If NULL, starting values for each feature will be randomly sampled from 1:L. Default NULL.}

\item{logfile}{Character. Messages will be redirected to a file named `logfile`. If NULL, messages will be printed to stdout.  Default NULL.}

\item{verbose}{Logical. Whether to print log messages. Default TRUE.}
}
\description{
celda Cell and Gene Clustering Model
}
